In low bandwidth cases, we are concerned with both rebuffer time AND variation (there is little that can be done about quality in this case). The reservoir plays a more signifcant role in this case, especially higher variance cases. It can cause a lot of switching between quality levels 0 and 1 if the dynamic reservoir shoots up and down over and over again. We should try to address this with a different mechanism.
- One idea might be just having a constant reservoir size (say 1/3 the max buffer size)
RESULT (3): This makes a small improvement in lower BW cases, but slightly worsens high BW cases (though not as much as the low BW improves)

In higher bandwidth cases, rebuffering becomes rare, but variation still plays a significant role.
- We could try to address cases like these by being stickier once we have reached the max quality, waiting until we cross the minimum quality point first (2 quality level stickiness in a more general case).
RESULT (4): There is little impact on performance from this. It is actually a tiny bit worse (not noticable).
- We could try a different sticky approach yet again. Stick with the top quality until we reach the threshold that is half way (or some other fraction) between 1 and 2 qualities below the highest quality.
RESULT (5): Very little impact once again, even less noticable.
- We could try having a variable upper reservoir based on average throughput of past ~5 or so iterations. High throughput -> upper reservoir at lower buffer size. Choice of implementation: If average of last 5 throughputs is higher than the highest bitrate, make the upper reservoir 0.5 * max buffer size, else 0.1 * max buffer size
RESULT (6): This has a fairly substantial positive impact. Higher throughput cases experience much better performance, since they no longer need to wait to go up to max quality.

Could combine (3) and (6) into (7):
RESULT (7): The overall effect is slightly improved over (6), and substantially over (3). The higher throughput cases are slightly hurt by (3) due to its conservative nature.