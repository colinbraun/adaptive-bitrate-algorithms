# ======================================================================================================================
# ======================================================================================================================
# VIDEO PARAMETERS
# Parameters for the specific video file being streamed

[video]
chunk_length=        1        # Seconds per chunk
base_chunk_size=     1        # Mb for quality level 1. Quality level 2 is doubled, 3 is quadrupled..
client_buffer_size=  30       # max seconds of video stored by client program

# ======================================================================================================================
# ======================================================================================================================
# QUALITY PARAMETERS
#
# User Quality of Experience formula:
# [ + (Total chunk quality) * (Quality Coefficient)
#   - (Total chunk variation) * (Variation Coefficient)
#   - (Total rebuffer time) * (Rebuffering Coefficient)
#   / Video Length = User Quality of Experience
#
# Shorthand: [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length = QoE
#
# Example: Video is made of three chunks, streamed with quality 3, quality 1, and quality 3 respectively. Each chunk is
#          3 seconds long. All coefficients are 1, and the video buffers for 2 seconds total.
#
#          Total quality: 3 + 1 + 3 = 7
#          Total variation: |3 - 1| + |1 - 3| = 4
#          Rebuffer time: 2
#          Video length: 3 * 3 = 9
#          QoE = [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length
#          QoE = [(   7     *     1    ) - (   4    *    1    ) - (     2     *      1    )] /      9
#              = .11

[quality]
quality_levels=                 3         # User can choose between 3 quality levels
quality_coefficient=            2         # See above
variation_coefficient=          1         # See above
rebuffering_coefficient=        8         # See above


# ======================================================================================================================
# ======================================================================================================================
# THROUGHPUT PARAMETERS
#
# Formatted as a list: CHANGE TO Mb
#         Start Time (Seconds) = New Throughput (Mbps)
#         e.g. 0=     1
#              10=    5
#              25=    2
#              implies that from simulated time 0 to 10 seconds, the throughput is 1Mbps. At 10 seconds, it changes to
#              5Mbps. Then, at 25 seconds, it changes to 2Mbps and stays there for the rest of the test.

[throughput]
# 36 different values.
0   = 3.0000  # Transition to 3.0000 Mbps at time    0 seconds.
3   = 2.5000  # Transition to 2.5000 Mbps at time    3 seconds.
5   = 3.5000  # Transition to 3.5000 Mbps at time    5 seconds.
38  = 2.5000  # Transition to 2.5000 Mbps at time   38 seconds.
44  = 4.0000  # Transition to 4.0000 Mbps at time   44 seconds.
50  = 3.5000  # Transition to 3.5000 Mbps at time   50 seconds.
64  = 4.0000  # Transition to 4.0000 Mbps at time   64 seconds.
68  = 4.5000  # Transition to 4.5000 Mbps at time   68 seconds.
78  = 3.0000  # Transition to 3.0000 Mbps at time   78 seconds.
90  = 3.5000  # Transition to 3.5000 Mbps at time   90 seconds.
98  = 4.5000  # Transition to 4.5000 Mbps at time   98 seconds.
111 = 3.5000  # Transition to 3.5000 Mbps at time  111 seconds.
112 = 4.0000  # Transition to 4.0000 Mbps at time  112 seconds.
113 = 3.5000  # Transition to 3.5000 Mbps at time  113 seconds.
121 = 3.0000  # Transition to 3.0000 Mbps at time  121 seconds.
134 = 2.5000  # Transition to 2.5000 Mbps at time  134 seconds.
137 = 2.0000  # Transition to 2.0000 Mbps at time  137 seconds.
149 = 1.5000  # Transition to 1.5000 Mbps at time  149 seconds.
157 = 2.0000  # Transition to 2.0000 Mbps at time  157 seconds.
170 = 2.5000  # Transition to 2.5000 Mbps at time  170 seconds.
172 = 0.5000  # Transition to 0.5000 Mbps at time  172 seconds.
173 = 2.0000  # Transition to 2.0000 Mbps at time  173 seconds.
176 = 2.5000  # Transition to 2.5000 Mbps at time  176 seconds.
191 = 4.5000  # Transition to 4.5000 Mbps at time  191 seconds.
203 = 3.5000  # Transition to 3.5000 Mbps at time  203 seconds.
205 = 4.0000  # Transition to 4.0000 Mbps at time  205 seconds.
206 = 4.5000  # Transition to 4.5000 Mbps at time  206 seconds.
216 = 4.0000  # Transition to 4.0000 Mbps at time  216 seconds.
236 = 3.5000  # Transition to 3.5000 Mbps at time  236 seconds.
241 = 4.0000  # Transition to 4.0000 Mbps at time  241 seconds.
243 = 3.5000  # Transition to 3.5000 Mbps at time  243 seconds.
246 = 4.5000  # Transition to 4.5000 Mbps at time  246 seconds.
302 = 4.0000  # Transition to 4.0000 Mbps at time  302 seconds.
303 = 3.5000  # Transition to 3.5000 Mbps at time  303 seconds.
313 = 4.0000  # Transition to 4.0000 Mbps at time  313 seconds.
323 = 4.5000  # Transition to 4.5000 Mbps at time  323 seconds.
# Throughput End

# ======================================================================================================================
# ======================================================================================================================
# CHUNK PARAMETERS
#
# A list of chunk size ratios. The size for streaming a particular chunk at a particular quality level is given by:
#         Total size = base chunk size * chunk size ratio * 2 ^ (quality level - 1)
#
#
# Example:   You'd like to stream the first three chunks in a video at quality levels 1, 2, 3. The base_chunk_size is
#            1Mb and the first three values in the chunk_size_ratios list are 1, 1, 1.
#
#            Size of first chunk:  1 * 1 * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 1 * 2 ^ (2 - 1) = 2
#            Size of third chunk:  1 * 1 * 2 ^ (3 - 1) = 4
#
# Example 2: Usually, streaming at a higher quality takes more bits. However, we may get counterintuitive results when
#            chunk size ratio varies as well. Let's say we're still streaming at quality levels 1, 2, 3. This time,
#            however, we set chunk_size_ratios to 1, 2, .5.
#
#            Size of first chunk:  1 * 1  * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 2  * 2 ^ (2 - 1) = 4
#            Size of third chunk:  1 * .5 * 2 ^ (3 - 1) = 2
#
#            Because variable-bitrate encoding allowed the third chunk to be encoded more cheaply, we could stream at
#            a higher quality and use fewer bits than the second chunk.
#
[chunk_size_ratios]
# Total size = chunk size * chunk size ratio * 2 ^ (quality level - 1)
chunk_size_ratios=
# 240 chunks.    1.000,
    1.400,
    1.400,
    1.800,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.400,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.400,
    1.200,
    1.200,
    1.200,
    1.200,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.600,
    0.200,
    0.200,
    0.200,
    0.200,
    0.200,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.800,
    1.000,
    0.200,
    0.400,
    0.400,
    0.200,
    0.200,
    0.600,
    0.600,
    0.600,
    0.600,
    0.800,
    0.400,
    0.600,
    0.400,
    0.600,
    0.200,
    0.200,
    0.200,
    0.400,
    0.400,
    0.400,
    0.800,
    1.800,
    1.000,
    1.600,
    1.600,
    1.600,
    1.600,
    1.400,
    1.400,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.000,
    0.400,
    1.200,
    1.200,
    1.200,
    0.800,
    0.400,
    0.400,
    0.400,
    1.000,
    1.000,
    1.000,
    1.800,
    1.800,
    1.600,
    1.600,
    1.600,
    1.800,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.400,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.200,
    1.200,
    0.800,
    0.800,
    0.600,
    0.600,
    0.400,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.800,
    1.800,
    1.800,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.600,
    1.600,
    1.600,
    1.400,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.400,
    0.800,
    0.800,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.200,
    0.600,
    0.600,
    1.000,
    1.000,
    1.000,
    1.200,
    1.000,
    0.600,
    0.200,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.800,
    0.800,
    0.600,
    0.600,
    0.400,
    1.000,
    0.400,
    0.400,
    0.600,
    0.600,
    0.400,
    0.400,
    0.200,
    0.200,
    0.200,
    0.200,
    0.200,
    0.400,
    0.200,
    0.200,
    0.600,
    0.600,
    0.600,
    0.600,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    0.800,
    0.600,
    1.000,
    1.000,
    1.000,
    1.800,
    1.800,
    1.800,
    0.200,
    1.000,
    1.000,
    0.600,
    0.600,
    0.800,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.000,
    1.000,
    1.000,
    0.800,
    0.800,
    0.800,
# Chunk Size Ratios End
