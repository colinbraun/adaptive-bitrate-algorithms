# ======================================================================================================================
# ======================================================================================================================
# VIDEO PARAMETERS
# Parameters for the specific video file being streamed

[video]
chunk_length=        1        # Seconds per chunk
base_chunk_size=     1        # Mb for quality level 1. Quality level 2 is doubled, 3 is quadrupled..
client_buffer_size=  30       # max seconds of video stored by client program

# ======================================================================================================================
# ======================================================================================================================
# QUALITY PARAMETERS
#
# User Quality of Experience formula:
# [ + (Total chunk quality) * (Quality Coefficient)
#   - (Total chunk variation) * (Variation Coefficient)
#   - (Total rebuffer time) * (Rebuffering Coefficient)
#   / Video Length = User Quality of Experience
#
# Shorthand: [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length = QoE
#
# Example: Video is made of three chunks, streamed with quality 3, quality 1, and quality 3 respectively. Each chunk is
#          3 seconds long. All coefficients are 1, and the video buffers for 2 seconds total.
#
#          Total quality: 3 + 1 + 3 = 7
#          Total variation: |3 - 1| + |1 - 3| = 4
#          Rebuffer time: 2
#          Video length: 3 * 3 = 9
#          QoE = [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length
#          QoE = [(   7     *     1    ) - (   4    *    1    ) - (     2     *      1    )] /      9
#              = .11

[quality]
quality_levels=                 3         # User can choose between 3 quality levels
quality_coefficient=            2         # See above
variation_coefficient=          1         # See above
rebuffering_coefficient=        8         # See above


# ======================================================================================================================
# ======================================================================================================================
# THROUGHPUT PARAMETERS
#
# Formatted as a list: CHANGE TO Mb
#         Start Time (Seconds) = New Throughput (Mbps)
#         e.g. 0=     1
#              10=    5
#              25=    2
#              implies that from simulated time 0 to 10 seconds, the throughput is 1Mbps. At 10 seconds, it changes to
#              5Mbps. Then, at 25 seconds, it changes to 2Mbps and stays there for the rest of the test.

[throughput]
# 66 different values.
0   = 2.0000  # Transition to 2.0000 Mbps at time    0 seconds.
6   = 1.6667  # Transition to 1.6667 Mbps at time    6 seconds.
10  = 2.3333  # Transition to 2.3333 Mbps at time   10 seconds.
17  = 2.6667  # Transition to 2.6667 Mbps at time   17 seconds.
22  = 3.0000  # Transition to 3.0000 Mbps at time   22 seconds.
34  = 2.6667  # Transition to 2.6667 Mbps at time   34 seconds.
36  = 2.3333  # Transition to 2.3333 Mbps at time   36 seconds.
58  = 1.6667  # Transition to 1.6667 Mbps at time   58 seconds.
59  = 0.3333  # Transition to 0.3333 Mbps at time   59 seconds.
65  = 2.0000  # Transition to 2.0000 Mbps at time   65 seconds.
82  = 2.3333  # Transition to 2.3333 Mbps at time   82 seconds.
83  = 2.0000  # Transition to 2.0000 Mbps at time   83 seconds.
87  = 1.6667  # Transition to 1.6667 Mbps at time   87 seconds.
96  = 2.6667  # Transition to 2.6667 Mbps at time   96 seconds.
99  = 2.3333  # Transition to 2.3333 Mbps at time   99 seconds.
106 = 2.0000  # Transition to 2.0000 Mbps at time  106 seconds.
110 = 1.3333  # Transition to 1.3333 Mbps at time  110 seconds.
114 = 0.6667  # Transition to 0.6667 Mbps at time  114 seconds.
115 = 1.0000  # Transition to 1.0000 Mbps at time  115 seconds.
118 = 1.3333  # Transition to 1.3333 Mbps at time  118 seconds.
145 = 2.0000  # Transition to 2.0000 Mbps at time  145 seconds.
146 = 2.3333  # Transition to 2.3333 Mbps at time  146 seconds.
160 = 2.0000  # Transition to 2.0000 Mbps at time  160 seconds.
186 = 2.3333  # Transition to 2.3333 Mbps at time  186 seconds.
188 = 2.0000  # Transition to 2.0000 Mbps at time  188 seconds.
197 = 2.6667  # Transition to 2.6667 Mbps at time  197 seconds.
198 = 3.0000  # Transition to 3.0000 Mbps at time  198 seconds.
201 = 2.3333  # Transition to 2.3333 Mbps at time  201 seconds.
208 = 2.6667  # Transition to 2.6667 Mbps at time  208 seconds.
215 = 2.0000  # Transition to 2.0000 Mbps at time  215 seconds.
222 = 2.3333  # Transition to 2.3333 Mbps at time  222 seconds.
233 = 2.0000  # Transition to 2.0000 Mbps at time  233 seconds.
241 = 2.3333  # Transition to 2.3333 Mbps at time  241 seconds.
263 = 2.6667  # Transition to 2.6667 Mbps at time  263 seconds.
264 = 2.3333  # Transition to 2.3333 Mbps at time  264 seconds.
269 = 1.6667  # Transition to 1.6667 Mbps at time  269 seconds.
271 = 1.3333  # Transition to 1.3333 Mbps at time  271 seconds.
272 = 0.3333  # Transition to 0.3333 Mbps at time  272 seconds.
291 = 1.6667  # Transition to 1.6667 Mbps at time  291 seconds.
300 = 3.0000  # Transition to 3.0000 Mbps at time  300 seconds.
317 = 2.3333  # Transition to 2.3333 Mbps at time  317 seconds.
336 = 2.0000  # Transition to 2.0000 Mbps at time  336 seconds.
351 = 1.6667  # Transition to 1.6667 Mbps at time  351 seconds.
355 = 1.3333  # Transition to 1.3333 Mbps at time  355 seconds.
357 = 2.3333  # Transition to 2.3333 Mbps at time  357 seconds.
377 = 2.0000  # Transition to 2.0000 Mbps at time  377 seconds.
387 = 2.3333  # Transition to 2.3333 Mbps at time  387 seconds.
404 = 2.6667  # Transition to 2.6667 Mbps at time  404 seconds.
413 = 3.0000  # Transition to 3.0000 Mbps at time  413 seconds.
424 = 2.6667  # Transition to 2.6667 Mbps at time  424 seconds.
428 = 2.3333  # Transition to 2.3333 Mbps at time  428 seconds.
436 = 2.6667  # Transition to 2.6667 Mbps at time  436 seconds.
461 = 3.0000  # Transition to 3.0000 Mbps at time  461 seconds.
464 = 2.0000  # Transition to 2.0000 Mbps at time  464 seconds.
471 = 1.6667  # Transition to 1.6667 Mbps at time  471 seconds.
474 = 0.6667  # Transition to 0.6667 Mbps at time  474 seconds.
478 = 0.3333  # Transition to 0.3333 Mbps at time  478 seconds.
479 = 3.0000  # Transition to 3.0000 Mbps at time  479 seconds.
489 = 2.3333  # Transition to 2.3333 Mbps at time  489 seconds.
496 = 2.0000  # Transition to 2.0000 Mbps at time  496 seconds.
509 = 2.3333  # Transition to 2.3333 Mbps at time  509 seconds.
511 = 2.6667  # Transition to 2.6667 Mbps at time  511 seconds.
512 = 3.0000  # Transition to 3.0000 Mbps at time  512 seconds.
516 = 2.0000  # Transition to 2.0000 Mbps at time  516 seconds.
519 = 2.3333  # Transition to 2.3333 Mbps at time  519 seconds.
536 = 2.6667  # Transition to 2.6667 Mbps at time  536 seconds.
# Throughput End

# ======================================================================================================================
# ======================================================================================================================
# CHUNK PARAMETERS
#
# A list of chunk size ratios. The size for streaming a particular chunk at a particular quality level is given by:
#         Total size = base chunk size * chunk size ratio * 2 ^ (quality level - 1)
#
#
# Example:   You'd like to stream the first three chunks in a video at quality levels 1, 2, 3. The base_chunk_size is
#            1Mb and the first three values in the chunk_size_ratios list are 1, 1, 1.
#
#            Size of first chunk:  1 * 1 * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 1 * 2 ^ (2 - 1) = 2
#            Size of third chunk:  1 * 1 * 2 ^ (3 - 1) = 4
#
# Example 2: Usually, streaming at a higher quality takes more bits. However, we may get counterintuitive results when
#            chunk size ratio varies as well. Let's say we're still streaming at quality levels 1, 2, 3. This time,
#            however, we set chunk_size_ratios to 1, 2, .5.
#
#            Size of first chunk:  1 * 1  * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 2  * 2 ^ (2 - 1) = 4
#            Size of third chunk:  1 * .5 * 2 ^ (3 - 1) = 2
#
#            Because variable-bitrate encoding allowed the third chunk to be encoded more cheaply, we could stream at
#            a higher quality and use fewer bits than the second chunk.
#
[chunk_size_ratios]
# Total size = chunk size * chunk size ratio * 2 ^ (quality level - 1)
chunk_size_ratios=
# 240 chunks.    1.000,
    1.000,
    1.000,
    0.800,
    0.800,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.400,
    0.400,
    0.400,
    0.400,
    0.800,
    1.000,
    1.000,
    1.000,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.800,
    1.200,
    1.400,
    1.600,
    1.400,
    1.400,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.600,
    1.800,
    1.400,
    1.600,
    1.400,
    1.400,
    1.400,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    0.800,
    0.400,
    0.400,
    0.400,
    0.200,
    0.400,
    0.400,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    1.000,
    0.200,
    0.200,
    0.200,
    0.800,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.200,
    1.200,
    1.200,
    1.000,
    0.200,
    0.600,
    0.200,
    0.200,
    0.200,
    0.200,
    0.200,
    0.200,
    0.400,
    0.400,
    0.200,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.600,
    1.600,
    1.400,
    1.400,
    1.400,
    1.600,
    1.400,
    1.600,
    1.600,
    1.800,
    1.600,
    1.600,
    1.600,
    1.400,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.600,
    1.600,
    1.400,
    1.000,
    1.600,
    1.600,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.600,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.400,
    1.600,
    1.600,
    1.200,
    1.000,
    1.000,
    0.800,
    0.800,
    0.800,
    0.800,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    1.000,
    1.000,
    1.000,
    1.000,
    0.400,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.000,
    1.000,
    0.800,
    0.800,
    0.600,
    0.200,
    0.200,
    0.800,
    1.000,
    0.200,
    1.000,
    1.200,
    1.400,
    1.400,
    0.400,
    0.400,
    0.400,
    0.800,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    1.400,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.400,
    1.400,
    1.400,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.000,
    1.000,
    1.000,
    0.800,
    0.800,
# Chunk Size Ratios End
